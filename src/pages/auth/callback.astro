---
import { supabase } from '../../lib/supabaseClient';

// Handle the OAuth callback from Google
const url = Astro.url;

// Check for error in query params first
const error = url.searchParams.get('error');
if (error) {
  console.error('OAuth error:', error);
  return Astro.redirect('/?error=oauth_error');
}

// For Supabase OAuth, we need to handle the session on the client side
// since the tokens come in the URL fragment (hash) which isn't available server-side
---

<!DOCTYPE html>
<html>
<head>
  <title>Completing Login...</title>
  <style>
    body {
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      margin: 0;
      background: #f3f4f6;
    }
    .loading {
      text-align: center;
      color: #374151;
    }
    .spinner {
      border: 3px solid #e5e7eb;
      border-top: 3px solid #3b82f6;
      border-radius: 50%;
      width: 40px;
      height: 40px;
      animation: spin 1s linear infinite;
      margin: 0 auto 20px;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <div class="loading">
    <div class="spinner"></div>
    <p>Completing your login...</p>
  </div>

  <script>
    import { supabase } from '../../lib/supabaseClient';
    
    async function handleAuthCallback() {
      try {
        // Supabase will automatically handle the OAuth tokens from the URL fragment
        const { data, error } = await supabase.auth.getSession();
        
        if (error) {
          console.error('Error getting session after OAuth:', error.message);
          window.location.href = '/?error=session_error';
          return;
        }
        
        if (data.session) {
          console.log('Session established successfully for:', data.session.user.email);
          // Redirect to dashboard
          window.location.href = '/dashboard';
        } else {
          console.error('No session found after OAuth callback');
          window.location.href = '/?error=no_session';
        }
      } catch (error) {
        console.error('Error in auth callback:', error.message);
        window.location.href = '/?error=callback_error';
      }
    }
    
    // Handle the callback when the page loads
    document.addEventListener('DOMContentLoaded', () => {
      // Small delay to ensure Supabase has processed the URL fragment
      setTimeout(handleAuthCallback, 100);
    });
  </script>
</body>
</html>
